@using H3PublisherApp.Models
@using H3PublisherApp.Services
@using MudBlazor

<MudDialog>
    <DialogContent>
        <MudGrid Spacing="6">
            @foreach (var book in Books)
            {
                <MudItem xs="12" sm="6" md="4">
                    <MudPaper Class="pa-4" Style="height: 100%;">
                        <MudStack Spacing="1">
                            <MudText Typo="Typo.h6">
                                Book: @book.Title
                            </MudText>

                            <MudText Typo="Typo.body1">
                                Price: @book.BasePrice
                            </MudText>
                            <MudText Typo="Typo.body1">
                                Published: @book.PublishDate
                            </MudText>
                            @if (book.Cover != null && book.Cover.Artists != null)
                            {
                                @foreach (var artist in book.Cover.Artists)
                                {
                                    <MudText Typo="Typo.body1">
                                        Artists: @artist.FirstName @artist.LastName
                                    </MudText>
                                }
                            }
                            <MudButton OnClick="() => Delete(book.Id)">Delete</MudButton>
                        </MudStack>
                    </MudPaper>
                </MudItem>
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    [Parameter]
    public List<Book> Books { get; set; } = new();
    [Inject]
    private BookRepo bookrepo { get; set; } = new();

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();

    private async Task Delete(int bookId)
    {
        await bookrepo.DeleteBookAsync(bookId);
    }
}