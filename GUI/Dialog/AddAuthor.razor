@using H3PublisherApp.Models
@using H3PublisherApp.Services
@using MudBlazor
<MudDialog Style="width:800px">
    <DialogContent>
        <MudPaper Class="pa-4">
            <MudText Typo="Typo.h6">Submit new author</MudText>
            <MudTextField @bind-Value="Author.FirstName" 
                          Label="First name" 
                          Variant="Variant.Outlined" 
                          Required="true" 
                          RequiredError="Field is required"
                          @bind-Value:after="CheckFormValidity"/>
            <MudTextField @bind-Value="Author.LastName" 
                          Label="Last name" 
                          Variant="Variant.Outlined" 
                          Required="true" 
                          RequiredError="Field is required"
                          @bind-Value:after="CheckFormValidity"/>         
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Submit" Color="Color.Primary" Disabled="@(!isFormValid)">Save</MudButton>
        <MudButton OnClick="Cancel" Color="Color.Secondary">Cancel</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    [Inject]
    private AuthorRepo _repo { get; set; }

    public Author Author { get; set; } = new();
    private bool isFormValid = false;

    private void CheckFormValidity()
    {
        isFormValid = !string.IsNullOrWhiteSpace(Author.FirstName) &&
                     !string.IsNullOrWhiteSpace(Author.LastName);
    }

    private async Task Submit()
    {
        if (isFormValid)
        {
            await _repo.CreateAuthorAsync(Author.FirstName, Author.LastName);
            MudDialog.Close();
        }
    }

    private void Cancel() => MudDialog.Cancel();
}